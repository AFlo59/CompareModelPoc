name: Test & Validate develop before merging

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/requirements.txt
        pip install -r requirements/dev-requirements.txt
        pip install -e .

    - name: Run unit tests with coverage
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-placeholder' }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'test-key-placeholder' }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY || 'test-key-placeholder' }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "PYTHONPATH is: $PYTHONPATH"
        python -c "import sys; print('Python path:', sys.path)"
        python -c "from src.data.database import get_connection; print('âœ… Import test successful')"
        pytest tests/ --maxfail=3 --disable-warnings -v --cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=80

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  quality:
    name: Code quality checks
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev-requirements.txt
        pip install -e .

    - name: Check code formatting with Black
      run: black --check --diff src/ tests/ --exclude="(migrations|__pycache__|\.git)"

    - name: Check import sorting with isort
      run: isort --check-only --diff src/ tests/ --skip-gitignore

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=__pycache__,migrations
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=__pycache__,migrations

    - name: Type check with mypy
      run: mypy src/ --ignore-missing-imports --check-untyped-defs --exclude="(migrations|__pycache__)" || true